{"version":3,"file":"scheduler.js","sources":["../src/scheduler.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-function-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Since ember-app-scheduler is just one file,\n * and a v1 addon,\n * I've copied the contents here so we don't have to deal\n * with another v1 addon.\n *\n * If the addon is converted to v2,\n * or if we, through framework feature implementation,\n * no longer need this stuff here, we can migrate to those external things and delete this file.\n *\n */\n\nimport { registerDestructor } from '@ember/destroyable';\nimport { addListener } from '@ember/object/events';\nimport type RouterService from '@ember/routing/router-service';\nimport { schedule } from '@ember/runloop';\nimport { buildWaiter, type Token } from '@ember/test-waiters';\nimport { tracked } from '@glimmer/tracking';\n\ninterface Deferred {\n  isResolved: boolean;\n  promise: Promise<any>;\n  resolve: Function;\n  reject: Function;\n}\n\nconst APP_SCHEDULER_HAS_SETUP: string = '__APP_SCHEDULER_HAS_SETUP__';\n\nlet _whenRouteDidChange: Deferred;\nlet _whenRouteIdle: Promise<unknown>;\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst IS_FASTBOOT = typeof (<any>window).FastBoot !== 'undefined';\nconst waiter = buildWaiter('ember-app-scheduler-waiter');\n\nreset();\n\nclass Scheduler {\n  @tracked isIdle = false;\n}\nconst scheduler = new Scheduler();\nexport default scheduler;\n\n/**\n * Initializes the top level promise that initiates the post-render work.\n *\n * @public\n * @function beginTransition\n * @return {void}\n */\nexport function beginTransition(): void {\n  if (_whenRouteDidChange.isResolved) {\n    _whenRouteDidChange = _defer();\n    _whenRouteIdle = _whenRouteDidChange.promise.then(() => {\n      const scheduledWorkToken: Token = waiter.beginAsync();\n\n      return new Promise((resolve) => {\n        // eslint-disable-next-line ember/no-runloop\n        schedule('afterRender', null, () => {\n          requestAnimationFrame(() => {\n            requestAnimationFrame(resolve);\n          });\n        });\n      }).finally(() => {\n        waiter.endAsync(scheduledWorkToken);\n        mark('appSchedulerEnd');\n        measure('appScheduler', 'appSchedulerStart', 'appSchedulerEnd');\n        scheduler.isIdle = true;\n      });\n    });\n    scheduler.isIdle = false;\n  }\n}\n\n/**\n * Initiates the post-render work.\n *\n * @public\n * @function endTransition\n * @return {void}\n */\nexport function endTransition(): void {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n  _whenRouteDidChange.resolve();\n  mark('appSchedulerStart');\n}\n\n/**\n * Connects the router's transition events to\n * app scheduler's work.\n *\n * @public\n * @function setupRouter\n * @param {RouterService|Router} router An instance of a RouterService or an Ember Router.\n * @return {void}\n */\nexport function setupRouter(router: RouterService): void {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (IS_FASTBOOT || (router as any)[APP_SCHEDULER_HAS_SETUP]) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  (router as any)[APP_SCHEDULER_HAS_SETUP] = true;\n\n  addListener(router, 'routeWillChange', beginTransition);\n  addListener(router, 'routeDidChange', endTransition);\n\n  registerDestructor(router, reset);\n}\n\n/**\n * Resets the state of app scheduler's top-level scheduled work promise.\n *\n * @public\n * @function reset\n * @return {void}\n */\nexport function reset(): void {\n  _whenRouteDidChange = _defer();\n  _whenRouteIdle = _whenRouteDidChange.promise.then();\n\n  waiter.reset();\n\n  if (!IS_FASTBOOT) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    _whenRouteDidChange.resolve();\n  }\n}\n\n/**\n * This promise, when resolved, approximates after content is painted.\n *\n * @public\n * @function whenRouteIdle\n * @return {Promise<any>} The scheduled work promise.\n */\nexport function whenRouteIdle(): Promise<any> {\n  return _whenRouteIdle;\n}\n\n/**\n * Allows for tests to pause until the scheduled work\n * promise is completed.\n *\n * @public\n * @function routeSettled\n * @return {Promise<any>} The scheduled work promise.\n */\nexport function routeSettled(): Promise<any> {\n  return _whenRouteIdle;\n}\n\nfunction _defer(): Deferred {\n  let _isResolved = false;\n  let _resolve!: () => void;\n  let _reject!: () => void;\n\n  const promise = new Promise<void>((resolve, reject) => {\n    _resolve = () => {\n      _isResolved = true;\n\n      resolve();\n    };\n    _reject = reject;\n  });\n\n  return {\n    promise,\n    resolve: _resolve,\n    reject: _reject,\n    get isResolved() {\n      return _isResolved;\n    },\n  };\n}\n\nfunction mark(markName: string): void {\n  try {\n    performance.mark(markName);\n  } catch (ex) {\n    console.warn(\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      `performance.mark could not be executed because of ${ex.message}`,\n    );\n  }\n}\n\nfunction measure(\n  measureName: string,\n  startMark: string | undefined,\n  endMark: string | undefined,\n) {\n  try {\n    performance.measure(measureName, startMark, endMark);\n  } catch (ex) {\n    console.warn(\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      `performance.mark could not be executed because of ${ex.message}`,\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      `performance.measure could not be executed because of ${ex.message}`,\n    );\n  }\n}\n"],"names":["APP_SCHEDULER_HAS_SETUP","_whenRouteDidChange","_whenRouteIdle","IS_FASTBOOT","window","FastBoot","waiter","buildWaiter","reset","Scheduler","g","prototype","tracked","i","void 0","scheduler","beginTransition","isResolved","_defer","promise","then","scheduledWorkToken","beginAsync","Promise","resolve","schedule","requestAnimationFrame","finally","endAsync","mark","measure","isIdle","endTransition","setupRouter","router","addListener","registerDestructor","whenRouteIdle","routeSettled","_isResolved","_resolve","_reject","reject","markName","performance","ex","console","warn","message","measureName","startMark","endMark"],"mappings":"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"}